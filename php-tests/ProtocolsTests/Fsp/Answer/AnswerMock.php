<?php

namespace tests\ProtocolsTests\Fsp\Answer;


use kalanis\RemoteRequest\Connection;
use tests\ProtocolsTests\Fsp\Common;


class AnswerMock extends Connection\Processor
{
    public function getResponseVersion()
    {
        return Common::makeDummyString([
            0x10, # CC_VERSION
            0x31, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x0A, # data_length
            0x00, 0x00, 0x00, 0x01, # position
            'Test v0.1', 0x00, # content
            0b01000100, # extra data - settings
        ]);
    }

    public function getResponseVersionPayload()
    {
        return Common::makeDummyQuery([
            0x10, # CC_VERSION
            0x94, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x0A, # data_length
            0x00, 0x00, 0x00, 0x05, # position
            'Test v0.2', 0x00, # content
            0b10011100, 0x00, 0x00, 0x04, 0x00, 0x02, 0x00 # extra data - settings
        ]);
    }

    public function getResponseDir()
    {
        return Common::makeDummyQuery([
            0x41, # CC_GET_DIR
            0x71, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x55, # data_length
            0x00, 0x00, 0x00, 0x0C, # position
            # content...
            0x12, 0x34, 0x56, 0x78, # time
            0x00, 0x00, 0x04, 0x00, # size
            0x01,                   # type
            'foo-bar-baz.txt', 0x00, # filename - "foo-bar-baz.txt\0"
            0x00, 0x00, 0x00, # padding 28

            0x5e, 0xff, 0x3f, 0xe6, // time
            0x00, 0x00, 0x00, 0x1c, // size
            0x03, // link
            0x31, 0x35, 0x39, 0x33, 0x36, 0x37, 0x39, 0x34, 0x30, 0x38, 0x37, 0x38, 0x32, 0x2e, 0x6a, 0x70, 0x67, "\n", // 1593679408782.jpg
            0x31, 0x35, 0x39, 0x33, 0x36, 0x37, 0x37, 0x38, 0x34, 0x34, 0x37, 0x38, 0x39, 0x2e, 0x6a, 0x70, 0x67, 0x00, // 1593677844789.jpg
            0x00, 0x00, 0x00, // padding 48

            0x00, 0x00, 0x00, 0x00, // 0
            0x00, 0x00, 0x00, 0x00, // 0
            0x00, // type end 9 ; 85 databytes
        ]);
    }

    public function getResponseDirReal()
    {
        return Common::makeDummyQuery([
            0x41, # CC_GET_DIR
            0xd7, # checksum
            0x68, 0x7f, # key
            0x01, 0xd3, # sequence
            0x01, 0x01, # data length - 257
            0x00, 0x00, 0x00, 0x00, # position (seek)

            # content...
            0x5f, 0x01, 0xac, 0x71, // 1593945201
            0x00, 0x00, 0x10, 0x00, // 4096
            0x02, // dir
            0x2e, 0x2e, 0x00, // ..
            // no padding

            0x5e, 0xe7, 0x78, 0x2c, // 1592227884
            0x00, 0x05, 0x47, 0xf5, // 346101
            0x01, // file
            0x6f, 0x70, 0x65, 0x6e, 0x20, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x6e, 0x67, 0x00, // open letter.pdf
            0x00, 0x00, 0x00, // padding

            0x5e, 0x44, 0x06, 0xc9, // 1581516489
            0x00, 0x01, 0x50, 0x6d, // 86125
            0x01, // file
            0x61, 0x73, 0x79, 0x6e, 0x63, 0x69, 0x6f, 0x2e, 0x70, 0x64, 0x66, 0x00, // asyncio.pdf
            0x00, 0x00, 0x00, // padding

            0x5e, 0xec, 0xec, 0x36, // 1592585270
            0x00, 0x01, 0x47, 0xf4, // 83956
            0x01, // file
            0x6d, 0x61, 0x6b, 0x6f, 0x74, 0x6f, 0x5f, 0x6b, 0x69, 0x6e, 0x6f, 0x5f, 0x62, 0x79, 0x5f, // makoto_kino_by_
            0x69, 0x73, 0x61, 0x63, 0x6b, 0x35, 0x30, 0x33, 0x5f, 0x64, 0x38, 0x74, 0x35, 0x31, 0x65, // isack503_d8t51e
            0x72, 0x2d, 0x66, 0x75, 0x6c, 0x6c, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x6a, 0x70, 0x67, 0x00, // r-fullview.jpg ; 150
            0x00, 0x00, // padding

            0x5e, 0xec, 0xe8, 0xcb, // 1592584395
            0x00, 0x84, 0x9c, 0xb1, // 8690865
            0x01, // file
            0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x2d, 0x74, 0x68, 0x65, 0x2d, 0x77, 0x65, 0x64, 0x64, // before-the-wedd
            0x69, 0x6e, 0x67, 0x2d, 0x6d, 0x61, 0x6b, 0x6f, 0x74, 0x6f, 0x2d, 0x6b, 0x69, 0x6e, 0x6f, // ing-makoto-kino
            0x2d, 0x63, 0x68, 0x69, 0x62, 0x69, 0x63, 0x68, 0x69, 0x62, 0x69, 0x2d, 0x39, 0x70, 0x5a, // -chibichibi-9pZ
            0x57, 0x2e, 0x6a, 0x70, 0x67, 0x00, // W.jpg
            // no padding

            0x5e, 0xff, 0x3f, 0xe6, // 1593786342
            0x00, 0x04, 0x35, 0xc4, // 275908
            0x01, // file
            0x31, 0x35, 0x39, 0x33, 0x36, 0x37, 0x39, 0x34, 0x30, 0x38, 0x37, 0x38, 0x32, 0x2e, 0x6a, 0x70, 0x67, 0x00, // 1593679408782.jpg
            0x00, // padding

            0x5e, 0xff, 0x3f, 0x7e, // 1593786238
            0x00, 0x01, 0x7e, 0x3d, // 97853
            0x01, // file
            0x31, 0x35, 0x39, 0x33, 0x36, 0x37, 0x37, 0x38, 0x34, 0x34, 0x37, 0x38, 0x39, 0x2e, 0x6a, 0x70, 0x67, 0x00, // 1593677844789.jpg
            0x00, // padding

            0x5f, 0x01, 0xac, 0x71, // 1593945201
            0x00, 0x00, 0x10, 0x00, // 4096
            0x02, // dir
            0x2e, 0x00, // .
            0x00, // padding

            0x00, 0x00, 0x00, 0x00, // 0
            0x00, 0x00, 0x00, 0x00, // 0
            0x00, // type end; 257 databytes
        ]);
    }

    public function getResponseError()
    {
        return Common::makeDummyQuery([
            0x40, # CC_ERR
            0xD8, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x10, # data_length
            0x00, 0x00, 0x00, 0x00, # position
            'Testing error 1', 0x00, # content
             # extra data - empty
        ]);
    }

    public function getResponseErrorDetails()
    {
        return Common::makeDummyQuery([
            0x40, # CC_ERR
            0x19, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x10, # data_length
            0x00, 0x00, 0x00, 0x00, # position
            'Testing error 2', 0x00, # content
            0x3F, # extra data - code 63 - "?"
        ]);
    }

    public function getResponseTest()
    {
        return Common::makeDummyQuery([
            0x81, # CC_TEST
            0x8B, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x00, # data_length
            0x00, 0x00, 0x00, 0x00, # position
            # no content
            # no extra data
        ]);
    }

    public function getResponseNothing()
    {
        return Common::makeDummyQuery([
            0x4A, # CC_BYE
            0x54, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x00, # data_length
            0x00, 0x00, 0x00, 0x00, # position
            # no content
            # no extra data
        ]);
    }

    public function getResponseGetFile()
    {
        return Common::makeDummyQuery([
            0x42, # CC_GET_FILE
            0x4D, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x0F, # data_length
            0x00, 0x00, 0x04, 0x00, # position
            'Testing data 1', 0x00, # content
            # no extra data
        ]);
    }

    public function getResponseUpload()
    {
        return Common::makeDummyQuery([
            0x43, # CC_UP_LOAD
            0x4F, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x00, # data_length
            0x00, 0x00, 0x02, 0x00, # position
            # no content
            # no extra data
        ]);
    }

    public function getResponseProtection()
    {
        return Common::makeDummyQuery([
            0x47, # CC_GET_PRO
            0xEB, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x08, # data_length
            0x00, 0x00, 0x00, 0x01, # position
            'foo/bar', 0x00, # content - directory "foo/bar"
            0b11100110, # no extra data
        ]);
    }

    public function getResponseStats()
    {
        return Common::makeDummyQuery([
            0x4D, # CC_STATS
            0x34, # checksum
            0x01, 0x02, # key
            0x03, 0x04, # sequence
            0x00, 0x09, # data_length
            0x00, 0x00, 0x00, 0x00, # position
            0x5E, 0x0B, 0xE1, 0x01,    0x00, 0x23, 0x44, 0x00,    0b00100000, # file stats - 2020-01-01T00:00:01+00:00, 2311168 B file
            # no extra data
        ]);
    }
}
